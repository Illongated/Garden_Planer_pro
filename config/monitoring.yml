# =============================================================================
# Agrotique Garden Planner - Unified Monitoring Configuration
# =============================================================================
# This file contains both Prometheus and Alertmanager configurations
# =============================================================================

# =============================================================================
# PROMETHEUS CONFIGURATION
# =============================================================================
prometheus:
  global:
    scrape_interval: 15s
    evaluation_interval: 15s
    external_labels:
      monitor: 'agrotique-monitor'
      environment: 'production'

  rule_files:
    - "alert_rules.yml"

  alerting:
    alertmanagers:
      - static_configs:
          - targets:
              - alertmanager:9093

  scrape_configs:
    # Prometheus itself
    - job_name: 'prometheus'
      static_configs:
        - targets: ['localhost:9090']

    # Node Exporter (system metrics)
    - job_name: 'node'
      static_configs:
        - targets: ['node-exporter:9100']
      scrape_interval: 5s

    # Backend API
    - job_name: 'backend'
      static_configs:
        - targets: ['backend:8000']
      metrics_path: '/metrics'
      scrape_interval: 10s

    # Frontend (if metrics exposed)
    - job_name: 'frontend'
      static_configs:
        - targets: ['frontend:80']
      metrics_path: '/metrics'
      scrape_interval: 30s

    # PostgreSQL
    - job_name: 'postgres'
      static_configs:
        - targets: ['postgres-exporter:9187']
      scrape_interval: 10s

    # Redis
    - job_name: 'redis'
      static_configs:
        - targets: ['redis-exporter:9121']
      scrape_interval: 10s

    # Nginx
    - job_name: 'nginx'
      static_configs:
        - targets: ['nginx:80']
      metrics_path: '/nginx_status'
      scrape_interval: 10s

    # Docker containers (cAdvisor)
    - job_name: 'cadvisor'
      static_configs:
        - targets: ['cadvisor:8080']
      scrape_interval: 10s

# =============================================================================
# ALERT RULES
# =============================================================================
alert_rules:
  groups:
    - name: agrotique.rules
      rules:
        # High CPU usage
        - alert: HighCPUUsage
          expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: "High CPU usage detected"
            description: "CPU usage is above 80% for more than 5 minutes"

        # High memory usage
        - alert: HighMemoryUsage
          expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100 > 85
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: "High memory usage detected"
            description: "Memory usage is above 85% for more than 5 minutes"

        # Disk space warning
        - alert: DiskSpaceWarning
          expr: (node_filesystem_size_bytes - node_filesystem_free_bytes) / node_filesystem_size_bytes * 100 > 80
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: "Disk space running low"
            description: "Disk usage is above 80%"

        # Application down
        - alert: ApplicationDown
          expr: up{job="backend"} == 0
          for: 1m
          labels:
            severity: critical
          annotations:
            summary: "Backend application is down"
            description: "Backend service has been down for more than 1 minute"

        # Database connection issues
        - alert: DatabaseConnectionIssues
          expr: up{job="postgres"} == 0
          for: 2m
          labels:
            severity: critical
          annotations:
            summary: "Database connection issues"
            description: "Cannot connect to PostgreSQL database"

        # High response time
        - alert: HighResponseTime
          expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 1
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: "High response time detected"
            description: "95th percentile response time is above 1 second"

        # Too many 5xx errors
        - alert: HighErrorRate
          expr: rate(http_requests_total{status=~"5.."}[5m]) > 0.1
          for: 5m
          labels:
            severity: critical
          annotations:
            summary: "High error rate detected"
            description: "Error rate is above 10% for more than 5 minutes"

# =============================================================================
# ALERTMANAGER CONFIGURATION
# =============================================================================
alertmanager:
  global:
    smtp_smarthost: 'localhost:587'
    smtp_from: 'alerts@agrotique.com'
    smtp_auth_username: 'alerts@agrotique.com'
    smtp_auth_password: '${SMTP_PASSWORD}'

  route:
    group_by: ['alertname']
    group_wait: 10s
    group_interval: 10s
    repeat_interval: 1h
    receiver: 'web.hook'
    routes:
      - match:
          severity: critical
        receiver: 'critical'
      - match:
          severity: warning
        receiver: 'warning'

  receivers:
    - name: 'web.hook'
      webhook_configs:
        - url: 'http://127.0.0.1:5001/'

    - name: 'critical'
      email_configs:
        - to: 'admin@agrotique.com'
          subject: 'CRITICAL: {{ .GroupLabels.alertname }}'
          body: |
            {{ range .Alerts }}
            Alert: {{ .Annotations.summary }}
            Description: {{ .Annotations.description }}
            Labels: {{ .Labels }}
            {{ end }}
      slack_configs:
        - api_url: '${SLACK_WEBHOOK_URL}'
          channel: '#alerts'
          title: 'CRITICAL Alert'
          text: |
            {{ range .Alerts }}
            *Alert:* {{ .Annotations.summary }}
            *Description:* {{ .Annotations.description }}
            {{ end }}

    - name: 'warning'
      email_configs:
        - to: 'team@agrotique.com'
          subject: 'WARNING: {{ .GroupLabels.alertname }}'
          body: |
            {{ range .Alerts }}
            Alert: {{ .Annotations.summary }}
            Description: {{ .Annotations.description }}
            {{ end }}

  inhibit_rules:
    - source_match:
        severity: 'critical'
      target_match:
        severity: 'warning'
      equal: ['alertname', 'dev', 'instance']

# =============================================================================
# GRAFANA DATASOURCES CONFIGURATION
# =============================================================================
grafana_datasources:
  datasources:
    - name: Prometheus
      type: prometheus
      access: proxy
      url: http://prometheus:9090
      isDefault: true
      editable: true

# =============================================================================
# RETENTION POLICIES
# =============================================================================
retention:
  prometheus:
    # Keep metrics for 15 days
    retention_time: "15d"
    # Maximum storage size
    retention_size: "10GB"
  
  alertmanager:
    # Keep alerts for 7 days
    data_retention: "168h"
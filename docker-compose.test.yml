# =============================================================================
# Garden Planner Pro - Test Environment
# Usage: docker-compose -f docker-compose.test.yml up
# =============================================================================
version: '3.9'

services:
  # Test Database
  db_test:
    image: postgres:16-alpine
    container_name: garden_planner_db_test
    environment:
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: garden_planner_test
    ports:
      - "5433:5432"
    tmpfs:
      - /var/lib/postgresql/data  # Use tmpfs for faster test database
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d garden_planner_test"]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - test_network

  # Test Redis
  redis_test:
    image: redis:7-alpine
    container_name: garden_planner_redis_test
    ports:
      - "6380:6379"
    tmpfs:
      - /data  # Use tmpfs for faster test cache
    command: redis-server --save ""  # Disable persistence for tests
    networks:
      - test_network

  # Backend Tests
  backend_test:
    build:
      context: .
      target: development
    container_name: garden_planner_backend_test
    environment:
      - DATABASE_URL=postgresql+asyncpg://test_user:test_password@db_test:5432/garden_planner_test
      - REDIS_HOST=redis_test
      - REDIS_PORT=6379
      - ENVIRONMENT=test
      - SECRET_KEY=test-secret-key
    volumes:
      - .:/app
    depends_on:
      db_test:
        condition: service_healthy
      redis_test:
        condition: service_started
    networks:
      - test_network
    command: ["python", "-m", "pytest", "app/tests/", "-v", "--cov=app", "--cov-report=html"]

networks:
  test_network:
    driver: bridge
    name: garden_planner_test_network
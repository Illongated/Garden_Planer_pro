"""Initial database schema

Revision ID: 31b11de043d7
Revises:
Create Date: 2024-07-31 15:39:17.456789

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '31b11de043d7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('plant_catalog',
    sa.Column('species_name', sa.String(length=255), nullable=False),
    sa.Column('common_name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('space_m2', sa.Float(), nullable=False),
    sa.Column('sun_preference', sa.Enum('full_sun', 'partial_shade', 'full_shade', name='sunpreference'), nullable=False),
    sa.Column('water_liters_per_week', sa.Float(), nullable=False),
    sa.Column('rich_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_plant_catalog'))
    )
    with op.batch_alter_table('plant_catalog', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_plant_catalog_species_name'), ['species_name'], unique=True)

    op.create_table('users',
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('companion_rules',
    sa.Column('source_plant_id', sa.UUID(), nullable=False),
    sa.Column('target_plant_id', sa.UUID(), nullable=False),
    sa.Column('relationship_type', sa.Enum('friend', 'enemy', 'neutral', name='companiontype'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['source_plant_id'], ['plant_catalog.id'], name=op.f('fk_companion_rules_source_plant_id_plant_catalog')),
    sa.ForeignKeyConstraint(['target_plant_id'], ['plant_catalog.id'], name=op.f('fk_companion_rules_target_plant_id_plant_catalog')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_companion_rules')),
    sa.UniqueConstraint('source_plant_id', 'target_plant_id', name='uq_companion_rule_pair')
    )
    with op.batch_alter_table('companion_rules', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_companion_rules_source_plant_id'), ['source_plant_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_companion_rules_target_plant_id'), ['target_plant_id'], unique=False)

    op.create_table('garden_projects',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('width_m', sa.Float(), nullable=False),
    sa.Column('depth_m', sa.Float(), nullable=False),
    sa.Column('sun_angle_deg', sa.Float(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name=op.f('fk_garden_projects_owner_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_garden_projects'))
    )

    op.create_table('audit_logs',
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('project_id', sa.UUID(), nullable=True),
    sa.Column('target_entity', sa.String(length=100), nullable=False),
    sa.Column('target_id', sa.String(), nullable=False),
    sa.Column('change_type', sa.Enum('create', 'update', 'delete', name='changetype'), nullable=False),
    sa.Column('change_diff', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['garden_projects.id'], name=op.f('fk_audit_logs_project_id_garden_projects')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_audit_logs_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_audit_logs'))
    )
    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_audit_logs_project_id'), ['project_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_target_entity'), ['target_entity'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_target_id'), ['target_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_user_id'), ['user_id'], unique=False)

    op.create_table('irrigation_zones',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['garden_projects.id'], name=op.f('fk_irrigation_zones_project_id_garden_projects')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_irrigation_zones'))
    )
    with op.batch_alter_table('irrigation_zones', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_irrigation_zones_project_id'), ['project_id'], unique=False)

    op.create_table('plant_instances',
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('catalog_id', sa.UUID(), nullable=False),
    sa.Column('x_coord', sa.Integer(), nullable=False),
    sa.Column('y_coord', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('planning', 'planted', 'growing', 'harvested', 'inactive', name='plantstatus'), nullable=False),
    sa.Column('is_manual_placement', sa.Boolean(), nullable=False),
    sa.Column('irrigation_zone_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['catalog_id'], ['plant_catalog.id'], name=op.f('fk_plant_instances_catalog_id_plant_catalog')),
    sa.ForeignKeyConstraint(['irrigation_zone_id'], ['irrigation_zones.id'], name=op.f('fk_plant_instances_irrigation_zone_id_irrigation_zones')),
    sa.ForeignKeyConstraint(['project_id'], ['garden_projects.id'], name=op.f('fk_plant_instances_project_id_garden_projects')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_plant_instances'))
    )
    with op.batch_alter_table('plant_instances', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_plant_instances_catalog_id'), ['catalog_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_plant_instances_project_id'), ['project_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('plant_instances', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_plant_instances_project_id'))
        batch_op.drop_index(batch_op.f('ix_plant_instances_catalog_id'))

    op.drop_table('plant_instances')
    with op.batch_alter_table('irrigation_zones', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_irrigation_zones_project_id'))

    op.drop_table('irrigation_zones')
    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_audit_logs_user_id'))
        batch_op.drop_index(batch_op.f('ix_audit_logs_target_id'))
        batch_op.drop_index(batch_op.f('ix_audit_logs_target_entity'))
        batch_op.drop_index(batch_op.f('ix_audit_logs_project_id'))

    op.drop_table('audit_logs')
    op.drop_table('garden_projects')
    with op.batch_alter_table('companion_rules', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_companion_rules_target_plant_id'))
        batch_op.drop_index(batch_op.f('ix_companion_rules_source_plant_id'))

    op.drop_table('companion_rules')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('plant_catalog', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_plant_catalog_species_name'))

    op.drop_table('plant_catalog')
    # ### end Alembic commands ###
